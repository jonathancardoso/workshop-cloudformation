AWSTemplateFormatVersion: "2010-09-09"
Description: "Pipeline CI/CD Example"


Parameters:
  S3StackName:
    Type: String

  templatepath:
    Default: templates/example-s3-bucket-initial.yaml
    Type: String

Resources:


  Repository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref S3StackName
      RepositoryDescription: !Ref S3StackName


  #-----------------------------------------------------------------------------#
  # CodePipeline
  #-----------------------------------------------------------------------------#
  Pipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref BucketArtifact
      Stages:

        #-----------------------------------------------------------------------------#
        # Source
        #-----------------------------------------------------------------------------#
        - Name: Source
          Actions:
            - Name: App
              Namespace: "SourceVariables"
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              Configuration:
                RepositoryName: !GetAtt Repository.Name
                BranchName: master
              OutputArtifacts:
                - Name: App
              RunOrder: 1

        #-----------------------------------------------------------------------------#
        # Continuous Integration
        #-----------------------------------------------------------------------------#
        - Name: Continuous-Integration
          Actions:
            - Name: GitSecret
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: GitSecret
              InputArtifacts:
                - Name: App
              Configuration:
                ProjectName: !Ref GitSecret
              RunOrder: 1

            - Name: CfnLint
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: cfn-lint
              InputArtifacts:
                - Name: App
              Configuration:
                ProjectName: !Ref CfnLint
              RunOrder: 1

            - Name: CfnNag
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: cfn-nag
              InputArtifacts:
                - Name: App
              Configuration:
                ProjectName: !Ref CfnNag
              RunOrder: 1

        #-----------------------------------------------------------------------------#
        # Continuous Deployment
        #-----------------------------------------------------------------------------#
        - Name: Continuous-Deployment
          Actions:

            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Ref S3StackName
                ChangeSetName: !Sub ${S3StackName}-ChangeSet
                TemplatePath: !Sub App::${templatepath}
                RoleArn: !GetAtt CloudFormationRole.Arn
              InputArtifacts:
                - Name: App
              RunOrder: 1

            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Ref S3StackName
                ChangeSetName: !Sub ${S3StackName}-ChangeSet
                TemplatePath: !Sub App::${templatepath}
                RoleArn: !GetAtt CloudFormationRole.Arn
              InputArtifacts:
                - Name: App
              RunOrder: 2


  #-----------------------------------------------------------------------------#
  # CodeBuild Project
  #-----------------------------------------------------------------------------#
  GitSecret:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/gitsecret.yaml
      TimeoutInMinutes: 10

  CfnLint:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/cfn-lint.yaml
      TimeoutInMinutes: 10

  CfnNag:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/cfn-nag.yaml
      TimeoutInMinutes: 10


  #-----------------------------------------------------------------------------#
  # S3
  #-----------------------------------------------------------------------------#
  BucketArtifact:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub ${AWS::AccountId}-${Repository}-artifacts

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketArtifact
      PolicyDocument:
        Statement:
          -
            Action:
              - s3:PutObject
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:ListBucket
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${BucketArtifact}
              - !Sub arn:aws:s3:::${BucketArtifact}/*
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root


  #-----------------------------------------------------------------------------#
  # Role for CodePipeline service
  #-----------------------------------------------------------------------------#
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service:
              - codepipeline.amazonaws.com
              - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess


  #-----------------------------------------------------------------------------#
  # Role for CodeBuild service
  #-----------------------------------------------------------------------------#
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/SystemAdministrator

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/SystemAdministrator
        - arn:aws:iam::aws:policy/IAMFullAccess

